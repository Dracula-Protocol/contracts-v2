{
  "address": "0x44DdA8E799dE6A4a4a50052793D208B3bE16cA33",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Victim",
          "name": "victim",
          "type": "Victim"
        },
        {
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        }
      ],
      "name": "lockableToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "IERC20"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Victim",
          "name": "victim",
          "type": "Victim"
        },
        {
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        }
      ],
      "name": "lockedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Victim",
          "name": "victim",
          "type": "Victim"
        },
        {
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "victimPoolId",
          "type": "uint256"
        }
      ],
      "name": "pendingReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Victim",
          "name": "victim",
          "type": "Victim"
        },
        {
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        }
      ],
      "name": "poolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Victim",
          "name": "victim",
          "type": "Victim"
        }
      ],
      "name": "poolCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Victim",
          "name": "victim",
          "type": "Victim"
        }
      ],
      "name": "rewardToWethPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Victim",
          "name": "victim",
          "type": "Victim"
        },
        {
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        }
      ],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "IERC20"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Victim",
          "name": "victim",
          "type": "Victim"
        },
        {
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "rewardValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Victim",
          "name": "victim",
          "type": "Victim"
        },
        {
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        }
      ],
      "name": "sellableRewardAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x4b88db4d95532ebad7ae486f5ccc7bd69d1dde576af2df49bf002b06640629f2",
  "receipt": {
    "to": null,
    "from": "0x94627695F66Ab36Ae00c1995a30Bf5B30E139873",
    "contractAddress": "0x44DdA8E799dE6A4a4a50052793D208B3bE16cA33",
    "transactionIndex": 23,
    "gasUsed": "1534812",
    "logsBloom": "0x
    "blockHash": "0x8c96b98acbb60e26f8b628140bace008e4f90538f912e30af5f079158eb1f128",
    "transactionHash": "0x4b88db4d95532ebad7ae486f5ccc7bd69d1dde576af2df49bf002b06640629f2",
    "logs": [],
    "blockNumber": 12719269,
    "cumulativeGasUsed": "3619016",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "e166554613407b5e5de9c2eccf5906c7",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Victim\",\"name\":\"victim\",\"type\":\"Victim\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"lockableToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"IERC20\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Victim\",\"name\":\"victim\",\"type\":\"Victim\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"lockedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Victim\",\"name\":\"victim\",\"type\":\"Victim\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"victimPoolId\",\"type\":\"uint256\"}],\"name\":\"pendingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Victim\",\"name\":\"victim\",\"type\":\"Victim\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"poolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Victim\",\"name\":\"victim\",\"type\":\"Victim\"}],\"name\":\"poolCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Victim\",\"name\":\"victim\",\"type\":\"Victim\"}],\"name\":\"rewardToWethPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Victim\",\"name\":\"victim\",\"type\":\"Victim\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"IERC20\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Victim\",\"name\":\"victim\",\"type\":\"Victim\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rewardValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Victim\",\"name\":\"victim\",\"type\":\"Victim\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"sellableRewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VampireAdapter.sol\":\"VampireAdapter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\"},\"contracts/VampireAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract Victim {}\\n\\nlibrary VampireAdapter {\\n    // Victim info\\n    function rewardToken(Victim victim, uint256 poolId) external view returns (IERC20) {\\n        (bool success, bytes memory result) = address(victim).staticcall(abi.encodeWithSignature(\\\"rewardToken(uint256)\\\", poolId));\\n        require(success, \\\"rewardToken(uint256) staticcall failed.\\\");\\n        return abi.decode(result, (IERC20));\\n    }\\n\\n    function rewardValue(Victim victim, uint256 poolId, uint256 amount) external view returns (uint256) {\\n        (bool success, bytes memory result) = address(victim).staticcall(abi.encodeWithSignature(\\\"rewardValue(uint256,uint256)\\\", poolId, amount));\\n        require(success, \\\"rewardValue(uint256,uint256) staticcall failed.\\\");\\n        return abi.decode(result, (uint256));\\n    }\\n\\n    function poolCount(Victim victim) external view returns (uint256) {\\n        (bool success, bytes memory result) = address(victim).staticcall(abi.encodeWithSignature(\\\"poolCount()\\\"));\\n        require(success, \\\"poolCount() staticcall failed.\\\");\\n        return abi.decode(result, (uint256));\\n    }\\n\\n    function sellableRewardAmount(Victim victim, uint256 poolId) external view returns (uint256) {\\n        (bool success, bytes memory result) = address(victim).staticcall(abi.encodeWithSignature(\\\"sellableRewardAmount(uint256)\\\", poolId));\\n        require(success, \\\"sellableRewardAmount(uint256) staticcall failed.\\\");\\n        return abi.decode(result, (uint256));\\n    }\\n\\n    // Victim actions\\n    function sellRewardForWeth(Victim victim, uint256 poolId, uint256 rewardAmount, address to) external returns(uint256) {\\n        (bool success, bytes memory result) = address(victim).delegatecall(abi.encodeWithSignature(\\\"sellRewardForWeth(address,uint256,uint256,address)\\\", address(victim), poolId, rewardAmount, to));\\n        require(success, \\\"sellRewardForWeth(uint256,address) delegatecall failed.\\\");\\n        return abi.decode(result, (uint256));\\n    }\\n\\n    // Pool info\\n    function lockableToken(Victim victim, uint256 poolId) external view returns (IERC20) {\\n        (bool success, bytes memory result) = address(victim).staticcall(abi.encodeWithSignature(\\\"lockableToken(uint256)\\\", poolId));\\n        require(success, \\\"lockableToken(uint256) staticcall failed.\\\");\\n        return abi.decode(result, (IERC20));\\n    }\\n\\n    function lockedAmount(Victim victim, uint256 poolId) external view returns (uint256) {\\n        // note the impersonation\\n        (bool success, bytes memory result) = address(victim).staticcall(abi.encodeWithSignature(\\\"lockedAmount(address,uint256)\\\", address(this), poolId));\\n        require(success, \\\"lockedAmount(uint256) staticcall failed.\\\");\\n        return abi.decode(result, (uint256));\\n    }\\n\\n    function pendingReward(Victim victim, uint256 poolId, uint256 victimPoolId) external view returns (uint256) {\\n        // note the impersonation\\n        (bool success, bytes memory result) = address(victim).staticcall(abi.encodeWithSignature(\\\"pendingReward(address,uint256,uint256)\\\", address(victim), poolId, victimPoolId));\\n        require(success, \\\"pendingReward(address,uint256,uint256) staticcall failed.\\\");\\n        return abi.decode(result, (uint256));\\n    }\\n\\n    // Pool actions\\n    function deposit(Victim victim, uint256 poolId, uint256 amount) external returns (uint256) {\\n        (bool success, bytes memory result) = address(victim).delegatecall(abi.encodeWithSignature(\\\"deposit(address,uint256,uint256)\\\", address(victim), poolId, amount));\\n        require(success, \\\"deposit(uint256,uint256) delegatecall failed.\\\");\\n        return abi.decode(result, (uint256));\\n    }\\n\\n    function withdraw(Victim victim, uint256 poolId, uint256 amount) external returns (uint256) {\\n        (bool success, bytes memory result) = address(victim).delegatecall(abi.encodeWithSignature(\\\"withdraw(address,uint256,uint256)\\\", address(victim), poolId, amount));\\n        require(success, \\\"withdraw(uint256,uint256) delegatecall failed.\\\");\\n        return abi.decode(result, (uint256));\\n    }\\n\\n    function claimReward(Victim victim, uint256 poolId, uint256 victimPoolId) external {\\n        (bool success,) = address(victim).delegatecall(abi.encodeWithSignature(\\\"claimReward(address,uint256,uint256)\\\", address(victim), poolId, victimPoolId));\\n        require(success, \\\"claimReward(uint256,uint256) delegatecall failed.\\\");\\n    }\\n\\n    function emergencyWithdraw(Victim victim, uint256 poolId) external {\\n        (bool success,) = address(victim).delegatecall(abi.encodeWithSignature(\\\"emergencyWithdraw(address,uint256)\\\", address(victim), poolId));\\n        require(success, \\\"emergencyWithdraw(uint256) delegatecall failed.\\\");\\n    }\\n\\n    // Service methods\\n    function poolAddress(Victim victim, uint256 poolId) external view returns (address) {\\n        (bool success, bytes memory result) = address(victim).staticcall(abi.encodeWithSignature(\\\"poolAddress(uint256)\\\", poolId));\\n        require(success, \\\"poolAddress(uint256) staticcall failed.\\\");\\n        return abi.decode(result, (address));\\n    }\\n\\n    function rewardToWethPool(Victim victim) external view returns (address) {\\n        (bool success, bytes memory result) = address(victim).staticcall(abi.encodeWithSignature(\\\"rewardToWethPool()\\\"));\\n        require(success, \\\"rewardToWethPool() staticcall failed.\\\");\\n        return abi.decode(result, (address));\\n    }\\n}\",\"keccak256\":\"0x0e27a650f2a17e4bd6765182a82685d8349eb7bb1d40c7373c76fc3a79711611\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x611ae0610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100f45760003560e01c80639fe833db11610096578063b50c4fb611610070578063b50c4fb6146103a9578063ca6e0c3f146103e2578063f352945514610415578063f8c35b3714610469576100f4565b80639fe833db146102e5578063a2c16fe714610324578063b1bac23314610370576100f4565b8063441c8c8e116100d2578063441c8c8e146101df57806353d6afd414610218578063922ff347146102665780639f743341146102ac576100f4565b80631e95069c146100f957806338f13431146101445780633d0dfc3b146101a0575b600080fd5b6101326004803603604081101561010f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356104b5565b60408051918252519081900360200190f35b6101776004803603602081101561015a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610633565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b610132600480360360608110156101b657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020810135906040013561079b565b610132600480360360408110156101f557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610921565b81801561022457600080fd5b506102646004803603606081101561023b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060208101359060400135610a79565b005b81801561027257600080fd5b506102646004803603604081101561028957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610bdd565b610177600480360360408110156102c257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610d39565b610132600480360360608110156102fb57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060208101359060400135610e91565b81801561033057600080fd5b506101326004803603606081101561034757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060208101359060400135610ff0565b6101776004803603604081101561038657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135611155565b610177600480360360408110156103bf57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356112ad565b610132600480360360208110156103f857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611405565b81801561042157600080fd5b506101326004803603608081101561043857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135916040820135916060013516611564565b81801561047557600080fd5b506101326004803603606081101561048c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602081013590604001356116f7565b60408051306024820152604480820184905282518083039091018152606490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa61bb76400000000000000000000000000000000000000000000000000000000178152915181516000938493849373ffffffffffffffffffffffffffffffffffffffff891693919290918291908083835b6020831061056d5780518252601f19909201916020918201910161054e565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146105cd576040519150601f19603f3d011682016040523d82523d6000602084013e6105d2565b606091505b5091509150816106135760405162461bcd60e51b81526004018080602001828103825260288152602001806118ab6028913960400191505060405180910390fd5b80806020019051602081101561062857600080fd5b505195945050505050565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f3d969aac00000000000000000000000000000000000000000000000000000000178152915181516000938493849373ffffffffffffffffffffffffffffffffffffffff881693919290918291908083835b602083106106d65780518252601f1990920191602091820191016106b7565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610736576040519150601f19603f3d011682016040523d82523d6000602084013e61073b565b606091505b50915091508161077c5760405162461bcd60e51b81526004018080602001828103825260258152602001806119916025913960400191505060405180910390fd5b80806020019051602081101561079157600080fd5b5051949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85166024820181905260448201859052606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f03985738000000000000000000000000000000000000000000000000000000001781529251825160009485948594939092909182918083835b6020831061085a5780518252601f19909201916020918201910161083b565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146108ba576040519150601f19603f3d011682016040523d82523d6000602084013e6108bf565b606091505b5091509150816109005760405162461bcd60e51b8152600401808060200182810382526039815260200180611a436039913960400191505060405180910390fd5b80806020019051602081101561091557600080fd5b50519695505050505050565b60408051602480820184905282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ffbb88fa100000000000000000000000000000000000000000000000000000000178152915181516000938493849373ffffffffffffffffffffffffffffffffffffffff891693919290918291908083835b602083106109d35780518252601f1990920191602091820191016109b4565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610a33576040519150601f19603f3d011682016040523d82523d6000602084013e610a38565b606091505b5091509150816106135760405162461bcd60e51b81526004018080602001828103825260308152602001806119e56030913960400191505060405180910390fd5b6040805173ffffffffffffffffffffffffffffffffffffffff85166024820181905260448201859052606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9d06fc9a000000000000000000000000000000000000000000000000000000001781529251825160009492939282918083835b60208310610b325780518252601f199092019160209182019101610b13565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610b92576040519150601f19603f3d011682016040523d82523d6000602084013e610b97565b606091505b5050905080610bd75760405162461bcd60e51b81526004018080602001828103825260318152602001806118d36031913960400191505060405180910390fd5b50505050565b6040805173ffffffffffffffffffffffffffffffffffffffff841660248201819052604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f95ccea67000000000000000000000000000000000000000000000000000000001781529251825160009492939282918083835b60208310610c8f5780518252601f199092019160209182019101610c70565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610cef576040519150601f19603f3d011682016040523d82523d6000602084013e610cf4565b606091505b5050905080610d345760405162461bcd60e51b815260040180806020018281038252602f8152602001806119b6602f913960400191505060405180910390fd5b505050565b60408051602480820184905282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f79b846fd00000000000000000000000000000000000000000000000000000000178152915181516000938493849373ffffffffffffffffffffffffffffffffffffffff891693919290918291908083835b60208310610deb5780518252601f199092019160209182019101610dcc565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610e4b576040519150601f19603f3d011682016040523d82523d6000602084013e610e50565b606091505b5091509150816106135760405162461bcd60e51b81526004018080602001828103825260298152602001806119046029913960400191505060405180910390fd5b6040805160248101849052604480820184905282518083039091018152606490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f5cde4b5d00000000000000000000000000000000000000000000000000000000178152915181516000938493849373ffffffffffffffffffffffffffffffffffffffff8a1693919290918291908083835b60208310610f4a5780518252601f199092019160209182019101610f2b565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610faa576040519150601f19603f3d011682016040523d82523d6000602084013e610faf565b606091505b5091509150816109005760405162461bcd60e51b815260040180806020018281038252602f815260200180611a7c602f913960400191505060405180910390fd5b6040805173ffffffffffffffffffffffffffffffffffffffff85166024820181905260448201859052606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb5c5f672000000000000000000000000000000000000000000000000000000001781529251825160009485948594939092909182918083835b602083106110af5780518252601f199092019160209182019101611090565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461110f576040519150601f19603f3d011682016040523d82523d6000602084013e611114565b606091505b5091509150816109005760405162461bcd60e51b815260040180806020018281038252602e815260200180611a15602e913960400191505060405180910390fd5b60408051602480820184905282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fda9da52600000000000000000000000000000000000000000000000000000000178152915181516000938493849373ffffffffffffffffffffffffffffffffffffffff891693919290918291908083835b602083106112075780518252601f1990920191602091820191016111e8565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611267576040519150601f19603f3d011682016040523d82523d6000602084013e61126c565b606091505b5091509150816106135760405162461bcd60e51b81526004018080602001828103825260278152602001806118846027913960400191505060405180910390fd5b60408051602480820184905282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f509b6c3f00000000000000000000000000000000000000000000000000000000178152915181516000938493849373ffffffffffffffffffffffffffffffffffffffff891693919290918291908083835b6020831061135f5780518252601f199092019160209182019101611340565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146113bf576040519150601f19603f3d011682016040523d82523d6000602084013e6113c4565b606091505b5091509150816106135760405162461bcd60e51b815260040180806020018281038252602781526020018061185d6027913960400191505060405180910390fd5b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ff525cb6800000000000000000000000000000000000000000000000000000000178152915181516000938493849373ffffffffffffffffffffffffffffffffffffffff881693919290918291908083835b602083106114a85780518252601f199092019160209182019101611489565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611508576040519150601f19603f3d011682016040523d82523d6000602084013e61150d565b606091505b50915091508161077c576040805162461bcd60e51b815260206004820152601e60248201527f706f6f6c436f756e7428292073746174696363616c6c206661696c65642e0000604482015290519081900360640190fd5b6040805173ffffffffffffffffffffffffffffffffffffffff8087166024830181905260448301879052606483018690529084166084808401919091528351808403909101815260a490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f92e77e77000000000000000000000000000000000000000000000000000000001781529251825160009485948594939092909182918083835b6020831061162f5780518252601f199092019160209182019101611610565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461168f576040519150601f19603f3d011682016040523d82523d6000602084013e611694565b606091505b5091509150816116d55760405162461bcd60e51b815260040180806020018281038252603781526020018061192d6037913960400191505060405180910390fd5b8080602001905160208110156116ea57600080fd5b5051979650505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85166024820181905260448201859052606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0efe6a8b000000000000000000000000000000000000000000000000000000001781529251825160009485948594939092909182918083835b602083106117b65780518252601f199092019160209182019101611797565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114611816576040519150601f19603f3d011682016040523d82523d6000602084013e61181b565b606091505b5091509150816109005760405162461bcd60e51b815260040180806020018281038252602d815260200180611964602d913960400191505060405180910390fdfe726577617264546f6b656e2875696e74323536292073746174696363616c6c206661696c65642e706f6f6c416464726573732875696e74323536292073746174696363616c6c206661696c65642e6c6f636b6564416d6f756e742875696e74323536292073746174696363616c6c206661696c65642e636c61696d5265776172642875696e743235362c75696e74323536292064656c656761746563616c6c206661696c65642e6c6f636b61626c65546f6b656e2875696e74323536292073746174696363616c6c206661696c65642e73656c6c526577617264466f72576574682875696e743235362c61646472657373292064656c656761746563616c6c206661696c65642e6465706f7369742875696e743235362c75696e74323536292064656c656761746563616c6c206661696c65642e726577617264546f57657468506f6f6c28292073746174696363616c6c206661696c65642e656d657267656e637957697468647261772875696e74323536292064656c656761746563616c6c206661696c65642e73656c6c61626c65526577617264416d6f756e742875696e74323536292073746174696363616c6c206661696c65642e77697468647261772875696e743235362c75696e74323536292064656c656761746563616c6c206661696c65642e70656e64696e6752657761726428616464726573732c75696e743235362c75696e74323536292073746174696363616c6c206661696c65642e72657761726456616c75652875696e743235362c75696e74323536292073746174696363616c6c206661696c65642ea264697066735822122064379cdaf843b12927bfc59437f86030291cec0ba6901cf714d9823c1bea027f64736f6c63430007060033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}